C:\Users\Сашко\webapp>docker images
REPOSITORY    TAG       IMAGE ID       CREATED          SIZE
flask_app     latest    8978cc21d1f4   36 seconds ago   399MB
ubuntu        latest    7e0aa2d69a15   4 weeks ago      72.7MB
hello-world   latest    d1165f221234   2 months ago     13.3kB

C:\Users\Сашко\webapp>docker run -p 8000:8000 flask_app
 * Serving Flask app '/opt/app.py' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
 * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
 * Running on http://172.17.0.2:8080/ (Press CTRL+C to quit)
^C
C:\Users\Сашко\webapp>docker ps
CONTAINER ID   IMAGE       COMMAND                  CREATED              STATUS              PORTS                                       NAMES
d9a20554223c   flask_app   "/bin/sh -c 'FLASK_A…"   About a minute ago   Up About a minute   0.0.0.0:8000->8080/tcp, :::8000->8080/tcp   relaxed_cerf

C:\Users\Сашко\webapp>docker attach d
Error response from daemon: Multiple IDs found with provided prefix: d

C:\Users\Сашко\webapp>docker attach d9
^C

C:\Users\Сашко\webapp>docker inspect d9
[
    {
        "Id": "d9a20554223c719ac769e8b1791d19cd37818617edeeb6aa6879a2853bb26172",
        "Created": "2021-05-27T19:49:35.46716Z",
        "Path": "/bin/sh",
        "Args": [
            "-c",
            "FLASK_APP=/opt/app.py flask run --host=0.0.0.0 --port=8080"
        ],
        "State": {
            "Status": "running",
            "Running": true,
            "Paused": false,
            "Restarting": false,
            "OOMKilled": false,
            "Dead": false,
            "Pid": 18884,
            "ExitCode": 0,
            "Error": "",
            "StartedAt": "2021-05-27T19:49:37.6704124Z",
            "FinishedAt": "0001-01-01T00:00:00Z"
        },
        "Image": "sha256:8978cc21d1f41ec191196c1f1eaf53b96e81e88c9206d5a1ec8b6534be0d5262",
        "ResolvConfPath": "/var/lib/docker/containers/d9a20554223c719ac769e8b1791d19cd37818617edeeb6aa6879a2853bb26172/resolv.conf",
        "HostnamePath": "/var/lib/docker/containers/d9a20554223c719ac769e8b1791d19cd37818617edeeb6aa6879a2853bb26172/hostname",
        "HostsPath": "/var/lib/docker/containers/d9a20554223c719ac769e8b1791d19cd37818617edeeb6aa6879a2853bb26172/hosts",
        "LogPath": "/var/lib/docker/containers/d9a20554223c719ac769e8b1791d19cd37818617edeeb6aa6879a2853bb26172/d9a20554223c719ac769e8b1791d19cd37818617edeeb6aa6879a2853bb26172-json.log",
        "Name": "/relaxed_cerf",
        "RestartCount": 0,
        "Driver": "overlay2",
        "Platform": "linux",
        "MountLabel": "",
        "ProcessLabel": "",
        "AppArmorProfile": "",
        "ExecIDs": null,
        "HostConfig": {
            "Binds": null,
            "ContainerIDFile": "",
            "LogConfig": {
                "Type": "json-file",
                "Config": {}
            },
            "NetworkMode": "default",
            "PortBindings": {
                "8080/tcp": [
                    {
                        "HostIp": "",
                        "HostPort": "8000"
                    }
                ]
            },
            "RestartPolicy": {
                "Name": "no",
                "MaximumRetryCount": 0
            },
            "AutoRemove": false,
            "VolumeDriver": "",
            "VolumesFrom": null,
            "CapAdd": null,
            "CapDrop": null,
            "CgroupnsMode": "host",
            "Dns": [],
            "DnsOptions": [],
            "DnsSearch": [],
            "ExtraHosts": null,
            "GroupAdd": null,
            "IpcMode": "private",
            "Cgroup": "",
            "Links": null,
            "OomScoreAdj": 0,
            "PidMode": "",
            "Privileged": false,
            "PublishAllPorts": false,
            "ReadonlyRootfs": false,
            "SecurityOpt": null,
            "UTSMode": "",
            "UsernsMode": "",
            "ShmSize": 67108864,
            "Runtime": "runc",
            "ConsoleSize": [
                25,
                150
            ],
            "Isolation": "",
            "CpuShares": 0,
            "Memory": 0,
            "NanoCpus": 0,
            "CgroupParent": "",
            "BlkioWeight": 0,
            "BlkioWeightDevice": [],
            "BlkioDeviceReadBps": null,
            "BlkioDeviceWriteBps": null,
            "BlkioDeviceReadIOps": null,
            "BlkioDeviceWriteIOps": null,
            "CpuPeriod": 0,
            "CpuQuota": 0,
            "CpuRealtimePeriod": 0,
            "CpuRealtimeRuntime": 0,
            "CpusetCpus": "",
            "CpusetMems": "",
            "Devices": [],
            "DeviceCgroupRules": null,
            "DeviceRequests": null,
            "KernelMemory": 0,
            "KernelMemoryTCP": 0,
            "MemoryReservation": 0,
            "MemorySwap": 0,
            "MemorySwappiness": null,
            "OomKillDisable": false,
            "PidsLimit": null,
            "Ulimits": null,
            "CpuCount": 0,
            "CpuPercent": 0,
            "IOMaximumIOps": 0,
            "IOMaximumBandwidth": 0,
            "MaskedPaths": [
                "/proc/asound",
                "/proc/acpi",
                "/proc/kcore",
                "/proc/keys",
                "/proc/latency_stats",
                "/proc/timer_list",
                "/proc/timer_stats",
                "/proc/sched_debug",
                "/proc/scsi",
                "/sys/firmware"
            ],
            "ReadonlyPaths": [
                "/proc/bus",
                "/proc/fs",
                "/proc/irq",
                "/proc/sys",
                "/proc/sysrq-trigger"
            ]
        },
        "GraphDriver": {
            "Data": {
                "LowerDir": "/var/lib/docker/overlay2/eb4f6790db06017bada583258afa23026a0254348bb7d5fe615f9ddcacd05ec4-init/diff:/var/lib/docker/overlay2/p5pjs6ngq420xy8xh2ss2iy2s/diff:/var/lib/docker/overlay2/3ty6fpgiz0szo9hj5jn9debvz/diff:/var/lib/docker/overlay2/pw2cirxo9y35mcgwgdzm97dl7/diff:/var/lib/docker/overlay2/9w1mkboao4yr0vtrtlw6q0yph/diff:/var/lib/docker/overlay2/4625483348a6b50dab25dc70b267f81a9e392d9c97535420bed78ccbdd880d5c/diff:/var/lib/docker/overlay2/34ef22c3424f45a2a889087101f86b930ceb5bc043ca29d5d151c8928cf5e9bb/diff:/var/lib/docker/overlay2/59f4699cc508a176fab5b3d3079ddf66cd089eb31bfa0cb1f54be0019cf00e4a/diff",
                "MergedDir": "/var/lib/docker/overlay2/eb4f6790db06017bada583258afa23026a0254348bb7d5fe615f9ddcacd05ec4/merged",
                "UpperDir": "/var/lib/docker/overlay2/eb4f6790db06017bada583258afa23026a0254348bb7d5fe615f9ddcacd05ec4/diff",
                "WorkDir": "/var/lib/docker/overlay2/eb4f6790db06017bada583258afa23026a0254348bb7d5fe615f9ddcacd05ec4/work"
            },
            "Name": "overlay2"
        },
        "Mounts": [],
        "Config": {
            "Hostname": "d9a20554223c",
            "Domainname": "",
            "User": "",
            "AttachStdin": false,
            "AttachStdout": true,
            "AttachStderr": true,
            "ExposedPorts": {
                "8080/tcp": {}
            },
            "Tty": false,
            "OpenStdin": false,
            "StdinOnce": false,
            "Env": [
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            ],
            "Cmd": null,
            "Image": "flask_app",
            "Volumes": null,
            "WorkingDir": "",
            "Entrypoint": [
                "/bin/sh",
                "-c",
                "FLASK_APP=/opt/app.py flask run --host=0.0.0.0 --port=8080"
            ],
            "OnBuild": null,
            "Labels": {}
        },
        "NetworkSettings": {
            "Bridge": "",
            "SandboxID": "694bb763fdcc1cd50466692878d3c4581cf7a0c62f7b62e88f16e5adbf652574",
            "HairpinMode": false,
            "LinkLocalIPv6Address": "",
            "LinkLocalIPv6PrefixLen": 0,
            "Ports": {
                "8080/tcp": [
                    {
                        "HostIp": "0.0.0.0",
                        "HostPort": "8000"
                    },
                    {
                        "HostIp": "::",
                        "HostPort": "8000"
                    }
                ]
            },
            "SandboxKey": "/var/run/docker/netns/694bb763fdcc",
            "SecondaryIPAddresses": null,
            "SecondaryIPv6Addresses": null,
            "EndpointID": "30887ddba6a9d7589cd2966ccb54c9bde64f4f95ba865207fedb2b96904612c9",
            "Gateway": "172.17.0.1",
            "GlobalIPv6Address": "",
            "GlobalIPv6PrefixLen": 0,
            "IPAddress": "172.17.0.2",
            "IPPrefixLen": 16,
            "IPv6Gateway": "",
            "MacAddress": "02:42:ac:11:00:02",
            "Networks": {
                "bridge": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "NetworkID": "0f565f1777066eb04aca378ac0b1754f13de6dc138cbb4788b373636aa87be25",
                    "EndpointID": "30887ddba6a9d7589cd2966ccb54c9bde64f4f95ba865207fedb2b96904612c9",
                    "Gateway": "172.17.0.1",
                    "IPAddress": "172.17.0.2",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "MacAddress": "02:42:ac:11:00:02",
                    "DriverOpts": null
                }
            }
        }
    }
]

C:\Users\Сашко\webapp>docker logs d9
 * Serving Flask app '/opt/app.py' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
 * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
 * Running on http://172.17.0.2:8080/ (Press CTRL+C to quit)

C:\Users\Сашко\webapp>docker build -t flask_app1 .
[+] Building 9.0s (11/11) FINISHED
 => [internal] load build definition from Dockerfile                                                                                             0.8s
 => => transferring dockerfile: 32B                                                                                                              0.0s
 => [internal] load .dockerignore                                                                                                                1.4s
 => => transferring context: 2B                                                                                                                  0.0s
 => [internal] load metadata for docker.io/library/ubuntu:20.04                                                                                  3.5s
 => [auth] library/ubuntu:pull token for registry-1.docker.io                                                                                    0.0s
 => [1/5] FROM docker.io/library/ubuntu:20.04@sha256:adf73ca014822ad8237623d388cedf4d5346aa72c270c5acc01431cc93e18e2d                            0.0s
 => [internal] load build context                                                                                                                0.5s
 => => transferring context: 277B                                                                                                                0.0s
 => CACHED [2/5] RUN apt-get update                                                                                                              0.0s
 => CACHED [3/5] RUN apt-get install -y python3 python3-pip                                                                                      0.0s
 => CACHED [4/5] RUN pip3 install flask                                                                                                          0.0s
 => [5/5] COPY app.py /opt/                                                                                                                      1.1s
 => exporting to image                                                                                                                           1.6s
 => => exporting layers                                                                                                                          1.0s
 => => writing image sha256:b76cefb1164458a6ca9b6849a4cd2cbf3cec7620108eea6525100482b3c72d7c                                                     0.1s
 => => naming to docker.io/library/flask_app1                                                                                                    0.1s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them

C:\Users\Сашко\webapp>docker images
REPOSITORY    TAG       IMAGE ID       CREATED          SIZE
flask_app1    latest    b76cefb11644   24 seconds ago   399MB
flask_app     latest    8978cc21d1f4   13 minutes ago   399MB
ubuntu        latest    7e0aa2d69a15   4 weeks ago      72.7MB
hello-world   latest    d1165f221234   2 months ago     13.3kB

C:\Users\Сашко\webapp>docker run -d b76
973eaa43ae3034d69e7500ac138527f3ba45cdc0d472c989ab75d586d79016b7

C:\Users\Сашко\webapp>docker ps
CONTAINER ID   IMAGE       COMMAND                  CREATED          STATUS          PORTS                                       NAMES
973eaa43ae30   b76         "/bin/sh -c 'FLASK_A…"   2 minutes ago    Up 2 minutes                                                busy_ganguly
d9a20554223c   flask_app   "/bin/sh -c 'FLASK_A…"   13 minutes ago   Up 13 minutes   0.0.0.0:8000->8080/tcp, :::8000->8080/tcp   relaxed_cerf

C:\Users\Сашко\webapp>docker stop b76
Error response from daemon: No such container: b76

C:\Users\Сашко\webapp>docker stop 973
973

C:\Users\Сашко\webapp>docker stop d9
d9